buildscript {
    ext {
        springBootVersion = '2.3.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    archiveBaseName = 'paas-ta-caas-broker'
    archiveFileName = 'paas-ta-caas-broker.jar'
    archiveVersion = '1.1.0'
}

ext {
    jsonPathVersion = '2.2.0'

    mainClassName = 'org.openpaas.servicebroker.container.platform.config.Application'
    jacocoVersion = '0.8.1'
}

def mainClassName = 'org.openpaas.servicebroker.container.platform.config.Application'

sourceCompatibility = 1.8
version = '1.0'

jar {
    manifest {
        attributes  'Title': 'CaaS Broker', 'Version': version, 'Main-Class': mainClassName
    }
    archivesBaseName = 'paas-ta-caas-broker'
    version = "" // omit the version from the war file name
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile files('libs/openpaas-service-java-broker.jar')
    compile("org.mariadb.jdbc:mariadb-java-client:2.2.6")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile('org.apache.commons:commons-dbcp2')
    compile('org.apache.httpcomponents:httpclient')
    compile('org.springframework:spring-context-support')
    compile("commons-beanutils:commons-beanutils:1.9.2")
    compile group: 'com.jcraft', name: 'jsch', version: "0.1.54"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.json', name: 'json', version: '20090211'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "${jacocoVersion}"
}

test {
    ignoreFailures=true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
}
